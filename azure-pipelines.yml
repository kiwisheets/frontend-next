trigger:
  branches:
    include:
      - main
      - dev

resources:
  - repo: self

pool:
  vmImage: ubuntu-latest

variables:
  app: frontend-next
  project: kiwisheets

  namespace: $(project)-$(env)
  tag: $(Build.BuildNumber)
  imagePullSecret: ghcr-pull-secret
  imageRepository: $(project)/$(app)
  containerRegistry: ghcr.io
  image: $(containerRegistry)/$(imageRepository):$(tag)
  dockerRegistryServiceConnection: GitHub CR
  isMain: $[in(variables['Build.SourceBranch'], 'refs/heads/main')]
  isDev: $[in(variables['Build.SourceBranch'], 'refs/heads/dev')]

stages:
  - stage: CI
    jobs:
      - job: Test
        steps:
          - task: Npm@1
            inputs:
              command: ci

          - bash: CI=true npm test
            displayName: Jest Test

      - job: Build
        steps:
          - task: Docker@2
            displayName: Docker Login
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              command: login

          - bash: |
              docker run --privileged --rm tonistiigi/binfmt --install arm64
              docker run --privileged --rm tonistiigi/binfmt
              docker buildx create --use
              docker buildx build --platform linux/amd64,linux/arm64 \
                -t $(containerRegistry)/$(imageRepository):$(tag) \
                -t $(containerRegistry)/$(imageRepository):latest \
                --push \
                .

          - publish: $(Build.SourcesDirectory)/k8s
            artifact: k8s

  - stage: DeployDev
    displayName: Deploy to Dev
    jobs:
      - deployment: Dev
        environment: dev.kiwisheets-dev
        variables:
          env: dev
          NEXT_PUBLIC_BASE_DOMAIN: https://dev.kiwisheets.com
          NEXT_PUBLIC_API_URI: /graphql
        strategy:
          runOnce:
            deploy:
              steps:
                - task: qetza.replacetokens.replacetokens-task.replacetokens@3
                  displayName: Replace tokens in k8s/*.yaml
                  inputs:
                    rootDirectory: $(Pipeline.Workspace)/k8s
                    targetFiles: '**/*.yaml'
                    tokenPrefix: __
                    tokenSuffix: __
                    actionOnMissing: fail

                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: createSecret
                    namespace: $(namespace)
                    secretName: $(imagePullSecret)
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

                - task: KubernetesManifest@0
                  displayName: deploy
                  inputs:
                    namespace: $(namespace)
                    manifests: $(Pipeline.Workspace)/k8s/deploy.yaml
                    imagePullSecrets: $(imagePullSecret)

  - stage: DeployProd
    displayName: Deploy to Prod
    jobs:
      - deployment: Prod
        environment: prod.kiwisheets-prod
        variables:
          env: prod
          NEXT_PUBLIC_BASE_DOMAIN: https://app.kiwisheets.com
          NEXT_PUBLIC_API_URI: /graphql
        strategy:
          runOnce:
            deploy:
              steps:
                - task: qetza.replacetokens.replacetokens-task.replacetokens@3
                  displayName: Replace tokens in k8s/*.yaml
                  inputs:
                    rootDirectory: $(Pipeline.Workspace)/k8s
                    targetFiles: '**/*.yaml'
                    tokenPrefix: __
                    tokenSuffix: __
                    actionOnMissing: fail

                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: createSecret
                    namespace: $(namespace)
                    secretName: $(imagePullSecret)
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

                - task: KubernetesManifest@0
                  displayName: deploy
                  inputs:
                    namespace: $(namespace)
                    manifests: $(Pipeline.Workspace)/k8s/deploy.yaml
                    imagePullSecrets: $(imagePullSecret)
